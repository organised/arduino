/* This code lets you turn 6 static frames into an animation, you can have many frames and sequence them into separate animations or re-use the frames */

#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

#define SDA_PIN 41
#define SCL_PIN 40


//Event condition, you'd obviously have a few event conditions, this is just for testing as a simple example
int event1 = 1;

U8G2_SSD1306_72X40_ER_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// Define structure for animation frames
struct Animation {
  const uint8_t **frames; // Pointer to array of frame pointers
  uint8_t frameCount;     // Number of frames in the animation
  uint8_t frameWidth;     // Width of the frames
  uint8_t frameHeight;    // Height of the frames

};

// Example frame data for an animation
const uint8_t frame1_data[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7,
   0xe1, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xcf, 0xf3, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

const uint8_t frame2_data[] = { 
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff, 0xff, 0x30, 0x0c,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcf, 0xf3, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f, 0x80, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f, 0x80, 0xfb, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x9f,
   0x71, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf1, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

const uint8_t frame3_data[] = { 
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7,
   0xe1, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xcf, 0xf3, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xef, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xe5, 0xf1, 0xfc, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xe7,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

   const uint8_t frame4_data[] = { 
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7,
   0xe1, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xcf, 0xf3, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,
   0x80, 0xbf, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0x3f, 0x80, 0xdf, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xfe, 0xff, 0xf9, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xbf, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xf9, 0xf1, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xf9,
   0x71, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

   const uint8_t frame5_data[] = { 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7,
   0xe1, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xcf, 0xf3, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xf3, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xb3, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0x7f, 0xff, 0xf1, 0xfe, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xfc,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

   const uint8_t frame6_data[] = { 
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7,
   0xe1, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe1, 0xfc, 0xff,
   0xff, 0xfc, 0x3f, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x30, 0x0c, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff,
   0xff, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30,
   0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0x9f,
   0x31, 0xff, 0xff, 0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff,
   0xff, 0xcc, 0x33, 0xff, 0xff, 0x9f, 0x31, 0xff, 0xff, 0xff, 0xcf, 0xf3,
   0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xcf, 0xf3, 0xff, 0xff, 0x07,
   0x00, 0xfc, 0xff, 0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x0c, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f,
   0xff, 0xff, 0x3f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,
   0x80, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0x3f, 0x80, 0xe7, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f,
   0x80, 0xe7, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x9f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0x9f, 0xf9,
   0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0x7f, 0xfe,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};


// More frames...

// Define animations
const uint8_t *animation1_frames[] = {frame1_data, frame2_data,frame3_data,frame4_data ,frame5_data ,frame6_data/*, ... */};
Animation animation1 = {animation1_frames, 6, 72, 40};  //6 frames, 72 width, 40 height

// More animations...

void setup() {
  Wire.begin(SDA_PIN, SCL_PIN);
  u8g2.begin();
}

void playAnimation(const Animation &anim) {
  for (int i = 0; i < anim.frameCount; ++i) {
    u8g2.clearBuffer();
    u8g2.setDrawColor(0);
    u8g2.drawXBMP(0, 0, anim.frameWidth, anim.frameHeight, anim.frames[i]);
    u8g2.sendBuffer();
    delay(100); // Adjust frame rate as needed
  }
}

void loop() {
  // Check for events and trigger animations
  if (event1==1) {
    playAnimation(animation1);
  }

  // Additional event checks and animation triggers...
}
